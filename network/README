code for presented network examples.

toygraph.edgelist contains a directed edgelist for the example graph,
a visualization of which is given in toygraph.png (generated from
toygraph.dot with graphviz).

to run:

   ./run_toygraph

this will convert the edgelist to an adjacency list, generate the
degree distribution, calculate the number of clustering coefficient
and one/two-hop neighborhood sizes, and perform breadth-first
search. (note: clustering coefficient computes number of closed,
out-bound triangles that each node belongs to.)

all examples run locally, but can be run using hadoop streaming on
large input, e.g.:

      cat toygraph.edgelist | ./adjacency_list.py -l > toygraph.adjlist

can be run on hadoop as:

    $HADOOP_HOME/bin/hadoop jar $HADOOP_HOME/contrib/streaming/hadoop-*-streaming.jar \
	-input toygraph.edgelist \
	-output toygraph.adjlist \
	-mapper "adjacency_list.py -m" \
	-reducer "adjacency_list.py -r" \
	-file adjacency_list.py \
	-file hstream.py

where $HADOOP_HOME points to your hadoop install.
